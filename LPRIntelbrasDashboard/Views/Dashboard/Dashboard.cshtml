@model LPRIntelbrasDashboard.Models.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard de Reconhecimento de Placas";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
<link href="~/css/dashboard.css" rel="stylesheet" />

<div class="container-fluid dashboard-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="fw-bold text-primary mb-0">
                <i class="bi bi-speedometer2 me-2"></i>Dashboard de Reconhecimento de Placas
            </h2>
            <p class="text-muted mb-0">Monitoramento em tempo real e histórico de leituras.</p>
        </div>

        <!-- TOGGLE DARK/LIGHT MODE -->
        <button id="themeToggle" class="btn btn-outline-secondary rounded-circle" title="Alternar tema">
            <i id="themeIcon" class="bi bi-moon"></i>
        </button>
    </div>

    <!-- FILTROS -->
    <form method="get" asp-action="Dashboard" class="card shadow-sm mb-4 p-3 border-0">
        <div class="row g-3 align-items-end">
            <div class="col-md-4">
                <label class="form-label fw-semibold">Filtrar por Placa</label>
                <input type="text" name="filtroPlaca" value="@Model.FiltroPlaca" class="form-control" placeholder="Ex: ABC1D23" />
            </div>
            <div class="col-md-4">
                <label class="form-label fw-semibold">Região</label>
                <select name="regiao" class="form-select">
                    <option value="">Todos</option>
                    @{
                        var regioes = Model.Registros.Select(r => r.Região).Distinct().OrderBy(r => r);
                        foreach (var reg in regioes)
                        {
                            var isSelected = string.Equals(Model.Regiao, reg, StringComparison.OrdinalIgnoreCase);
                            <option value="@reg" selected="@(isSelected ? "selected" : null)">@reg</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label fw-semibold">Data</label>
                <input type="date" name="data" value="@Model.Data" class="form-control" />
            </div>
            <div class="col-md-1 text-end">
                <button type="submit" class="btn btn-primary w-100">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>
    </form>

    <!-- CARDS DE RESUMO -->
    <div class="row g-3 mb-4">
        <div class="col-md-3">
            <div class="summary-card bg-primary text-white shadow-sm">
                <i class="bi bi-car-front-fill summary-icon"></i>
                <div>
                    <h5 class="fw-bold mb-0">@Model.TotalPlacas</h5>
                    <small>Total de Leituras</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="summary-card bg-success text-white shadow-sm">
                <i class="bi bi-geo-alt-fill summary-icon"></i>
                <div>
                    <h5 class="fw-bold mb-0">@Model.Registros.Select(r => r.Região).Distinct().Count()</h5>
                    <small>Regiões Monitoradas</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="summary-card bg-warning text-dark shadow-sm">
                <i class="bi bi-calendar3 summary-icon"></i>
                <div>
                    <h5 class="fw-bold mb-0">@Model.Registros.Select(r => DateTime.Parse(r.DataHora).ToString("dd/MM/yyyy")).Distinct().Count()</h5>
                    <small>Dias de Registro</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="summary-card bg-info text-white shadow-sm">
                <i class="bi bi-clock-history summary-icon"></i>
                <div>
                    <h5 class="fw-bold mb-0">@Model.Registros.FirstOrDefault()?.DataHora</h5>
                    <small>Última Leitura</small>
                </div>
            </div>
        </div>
    </div>

    <!-- TABELA COM SCROLL -->
    <div class="card shadow-sm border-0">
        <div class="card-header bg-light fw-semibold d-flex justify-content-between align-items-center">
            <span><i class="bi bi-table me-2"></i>Registros Recentes</span>
            <small class="text-muted">Exibindo até 100 registros</small>
        </div>
        <div class="table-responsive table-scroll">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-primary sticky-top">
                    <tr>
                        <th>Placa</th>
                        <th>Data e Hora</th>
                        <th>Região</th>
                        <th>Imagem</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Registros.Any())
                    {
                        foreach (var item in Model.Registros.Take(100))
                        {
                            <tr>
                                <td class="fw-semibold">@item.NPlaca</td>
                                <td>@item.DataHora</td>
                                <td>@item.Região</td>
                                <td>
                                    <span class="text-muted">—</span>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center text-muted py-4">
                                <i class="bi bi-info-circle me-2"></i>Nenhum registro encontrado.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<!-- DARK/LIGHT TOGGLE SCRIPT -->
<script>
    const themeToggle = document.getElementById("themeToggle");
    const themeIcon = document.getElementById("themeIcon");
    const root = document.documentElement;

    function applyTheme(isDark) {
        document.body.classList.toggle("dark-mode", isDark);
        themeIcon.className = isDark ? "bi bi-sun" : "bi bi-moon";
        localStorage.setItem("theme", isDark ? "dark" : "light");
    }

    themeToggle.addEventListener("click", () => {
        const isDark = !document.body.classList.contains("dark-mode");
        applyTheme(isDark);
    });

    // Load stored theme
    if (localStorage.getItem("theme") === "dark") {
        applyTheme(true);
    }
</script>
